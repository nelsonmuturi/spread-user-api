openapi: 3.0.3
info:
  title: Spread Users Api
  description: >
    'Users API provides endpoints for supporting all user maintenance in Spread.'
  termsOfService: https://github.com/PacktPublishing/Modern-API-Development-with-Spring-and-Spring-Boot/blob/master/LICENSE
  contact:
    email: info@tini-labs.com
  license:
    name: MIT
    url: https://github.com/PacktPublishing/Modern-API-Development-with-Spring-and-Spring-Boot/blob/master/LICENSE
  version: 1.0.0
externalDocs:
  description: Any document link you want to generate along with API.
  url: http://swagger.io
servers:
  - url: http://localhost:8201
tags:
  - name: user
    description: Operations about user signup, signin and so on
paths:
  /api/v1/users:
    post:
      tags:
        - user
      summary: signup a new user
      description: creates a new user entity
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqUser'
      responses:
        201:
          description: For successful user creation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedInUser'
  /api/v1/auth/token:
    post:
      tags:
        - user
      summary: Signin the user
      description: sign-in the user that generates the JWT (access token) and refresh token, which can be used for accessing APIs.
      operationId: signIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInReq'
      responses:
        200:
          description: user receives the access and refresh token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedInUser'
    delete:
      tags:
        - user
      summary: signs out the user
      description: signs out the user. It removes the refresh token from DB. Last issued JWT should be removed from client end that if not removed last for given expiration time.
      operationId: signOut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
      responses:
        202:
          description: Accepts the request for logout.
  /api/v1/auth/token/refresh:
    post:
      tags:
        - user
      summary: Provides new JWT based on valid refresh token.
      description: Provides new JWT based on valid refresh token.
      operationId: getAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
      responses:
        200:
          description: For successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedInUser'
components:
  schemas:
    ReqUser:
      type: object
      properties:
        id:
          description: id of the user
          type: string
        name:
          description: name of the user
          type: string
        password:
          description: password of the user
          type: string
    SignInReq:
      description: Request body for Sign-in
      type: object
      properties:
        username:
          description: username of the User
          type: string
        password:
          description: password of the User
          type: string
    SignedInUser:
      description: Signed-in user information
      type: object
      properties:
        refreshToken:
          description: Refresh Token
          type: string
        accessToken:
          description: JWT Token aka access token
          type: string
        username:
          description: User Name
          type: string
        userId:
          description: User Identifier
          type: string
        role:
          description: user role
          type: string
    RefreshToken:
      description: Contains the refresh token
      type: object
      properties:
        refreshToken:
          description: Refresh Token
          type: string
